/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
            ht: hold_tap {
                    compatible = "zmk,behavior-hold-tap";
                    label = "Hold Tap";
                    #binding-cells = <2>;
                    tapping_term_ms = <150>;
                    flavor = "hold-preferred";
                    bindings = <&kp>, <&kp>;
            };
    };


    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  `           |  1   |  2   |  3   |  4   |  5     |                   |  6   |  7    |  8    |  9   |   0   |   -   |
// |  TAB         |  Q   |  W   |  E   |  R   |  T     |                   |  Y   |  U    |  I    |  O   |   P   |   \   |
// |  L_CTRL(ESC) |  A   |  S   |  D   |  F   |  G     |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT        |  Z   |  X   |  C   |  V   |  B     | MUTE  |  PP       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//                       | CTRL | GUI  | ALT  | SPACE  | LOWER | ENTER     | BSPC | LOWER | UPPER | GUI  |
            bindings = <
&kp GRAVE     &kp N1    &kp N2    &kp N3    &kp N4    &kp N5                      &kp N6   &kp N7    &kp N8    &kp N9   &kp N0   &kp MINUS   
&kp TAB       &kp Q     &kp W     &kp E     &kp R     &kp T                       &kp Y    &kp U     &kp I     &kp O    &kp P    &kp BSLH
&ht LCTRL ESC &kp A     &kp S     &kp D     &kp F     &kp G                       &kp H    &kp J     &kp K     &kp L    &kp SEMI &kp SQT
&kp LSHFT     &kp Z     &kp X     &kp C     &kp V     &kp B     &kp C_MUTE &kp C_PP  &kp N    &kp M  &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
                        &kp LCTRL &kp LGUI  &kp LALT  &kp SPACE &kp DEL    &kp RET   &kp BSPC &mo 1  &mo 2 &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp K_NEXT K_PREV>;
        };

        lower_layer {
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |  F12  |
// |       |     |  {  |  [   |  (   |  -   |                   |  _   |   )   |   ]   |   }  |   _   |   +   |
// |       |     |     |      |      |      |        |  |       |      |       |       |      |   -   |   =   |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&trans    &kp F1    &kp F2    &kp F3      &kp F4    &kp F5                    &kp F6    &kp F7   &kp F8          &kp F9    &kp F10   &kp F11
&trans    &kp EXCL  &kp AT    &kp HASH    &kp DLLR  &kp PRCNT                 &kp CARET &kp AMPS &kp KP_MULTIPLY &kp LPAR  &kp RPAR  &kp F12
&trans    &trans    &kp LBRC  &kp LBKT    &kp LPAR  &kp MINUS                 &kp UNDER &kp RPAR &kp RBKT        &kp RBRC  &kp UNDER &kp PLUS
&trans    &trans    &trans    &trans      &trans    &trans    &trans   &trans &trans    &trans   &trans          &trans    &kp MINUS &kp EQUAL
                    &trans    &trans      &trans    &trans    &trans   &trans &trans    &trans   &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp K_NEXT K_PREV>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                  |      |      | PRSC  | INS  | HOME  | PG_UP   |
// |     |      |      |       |       |      |                  |      |      |       | DEL  | END   | PG_DOWN |
// |     |      |      | SHIFT |       |      |                  |  <-  |   ^  |   v   |  ->  |       | DEL     |
// |     | UNDO | CUT  | COPY  | PASTE |      | RESET |  | RESET |      |      |       |      |       |         |
//              |      |       |       |      |       |  |       |      |      |       |      |
            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4             &trans    &trans    &kp PRSC &kp INS    &kp HOME  &kp PG_UP
&trans     &trans       &trans       &trans       &trans       &trans                   &trans    &trans    &trans   &kp DEL    &kp END   &kp PG_DN
&trans     &kp LALT     &kp LCTRL    &kp LSHFT    &trans       &trans                   &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT  &trans    &kp DEL
&trans     &kp K_UNDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE  &trans  &reset   &reset  &trans    &trans    &trans   &trans     &trans    &trans
                        &trans       &trans       &trans       &trans  &trans   &trans  &trans    &trans    &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp K_NEXT K_PREV>;
        };
    };
};
